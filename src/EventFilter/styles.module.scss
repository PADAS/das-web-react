@import '../common/styles/buttons';
@import '../common/styles/vars/colors';
@import '../common/styles/layout';
@import '../common/styles/popovers';

.form {
  align-items: center;
  border-bottom: 1px solid $gray-border;
  flex-wrap: wrap;
  display: flex;
  justify-content: flex-end;
  padding: 0.5rem;
  position: relative;
  z-index: 2;
  .filterDetails { 
    font-size: 75%;
    line-height: normal;
    margin-top: 0.5rem;
    margin-left: 4rem;
    width: 100%;
  }
  @media (min-width: $md-layout-width-min) {
    padding: 1rem 1rem 0.5rem;
  }
}

.search {
  margin-bottom: 0;
  margin-right: 0.5rem;
  width: 50%;
  @media (min-width: $md-layout-width-min) {
    margin-right: unset;
    width: unset;
  }
}

.dateSelect {
  display: flex;
  flex-wrap: wrap;
  position: relative;
  z-index: 1;
  > label {
    width: 100%;
    padding-right: 0.25rem;
    + label {
      padding-left: 0.25rem;
    }
    @media (min-width: $md-layout-width-min) {
      width: 50%;
    }
  }
}


.filterPopover {
  > [class*=arrow]::after {
    border-bottom-color: $popover-header-color;
  }
  [class*=popover-header] {
    @include popoverTitle;
    &::before {
      display: none;
    }
  }
}

div.filterPopover {
  --content-height: 32rem;
  max-height: var(--content-height);
  max-width: 29rem;
  overflow: hidden;
  width: 90vw;
  [class*=popover-body] {
    overflow: hidden;
    padding: 0;
  }
  [class*=Collapsible__trigger] {
    cursor: pointer;
  }
}

.controls {
  align-items: center;
  display: flex;
  justify-content: space-between;
  width: 100%;
}

.popoverTrigger {
  align-items: center;
  color: lighten($primary-font-color, 15%);
  cursor: pointer;
  display: flex;
  flex-flow: column;
  svg {
    --dimensions: 1rem;
    height: var(--dimensions);
    width: var(--dimensions);
    + span {
      font-size: 0.75rem;
      margin-left: 0.25rem;
    }
    @media (min-width: $md-layout-width-min) {
      --dimensions: 1.5rem;
    }
  }
  &:hover {
    color: $primary-font-color;
  }
}

@media (min-width: $md-layout-width-min) {
  form[class*=sidebarOpen] {
    .popoverTrigger {
      flex-flow: row;
    }
  }
}

.filterIcon {
  * {
    fill: lighten($primary-font-color, 15%);
    &:hover {
        fill: $primary-font-color;
    }
  }
}

.clockIcon {
  * {
    stroke: lighten($primary-font-color, 15%);
    &:hover {
      stroke: $primary-font-color;
    }
  }
}

.modified {
  color: $highlight-color;
  .filterIcon * {
    fill: $highlight-color;
    &:hover {
      fill: darken($highlight-color, 6%);
    }
  }
  .clockIcon * {
    stroke: $highlight-color;
    &:hover {
      stroke: darken($highlight-color, 6%);
    }
  }
}

.filterTitle, .popoverTitle {
  align-items: center;
  display: flex;
  line-height: normal;
  width: 100%;
  button {
    margin-left: auto;
  }
}

.popoverTitle {
  --dimensions: 1.5rem;
  svg {
    height: var(--dimensions);
    margin-right: 0.5rem;
    width: var(--dimensions);
    * {
      stroke: white;
    }
  }
}

.closedFilterDrawer, .openedFilterDrawer {
  border-bottom: 1px solid $gray-border;
}

.closedFilterDrawer, .openedFilterDrawer {
  &:last-of-type {
    border: none;
  }
}

.filterTitle {
  small {
    font-size: 65%;
    font-style: italic;
    margin-left: 0.5rem;
    white-space: nowrap;
  }
}

.toggleAllReportTypes {
  align-items: flex-end;
  display: flex;
  font-size: 0.3rem;
  height: 1.5rem;
}

.closedFilterDrawer {
  [class*=Collapsible__contentOuter] {
    overflow-y: hidden !important;
  }
}

.openedFilterDrawer {
  [class*=Collapsible__contentOuter] {
    // min-height: 20rem;
    height: 70vh;
    max-height: 24rem;
    overflow-y: auto !important;
  }
  &.reportTypeDrawer {
    [class*=Collapsible__contentOuter] {
      overflow-y: hidden !important;
      [class*=Collapsible__contentInner] {
        height: 70vh;
        max-height: 24rem;
      }
    }
  }
}

.filterRow, .stateList {
  align-items: center;
  display: flex;
}

.stateList {
  margin-bottom: 0;
}

.activeState button {
  font-weight: 600;
}


.filterRow {
  border-bottom: 1px solid $gray-border;
  justify-content: space-between;
  padding: 0.5rem;
  > svg {
    --dimensions: 1.5rem;
    height: var(--dimensions);
    width: var(--dimensions);
  }
  label {
    margin-bottom: 0;
  }
  &.priorityRow {
    label {
      display: none;
      @media (min-width: $md-layout-width-min) {
        display: initial;
      }
    }
  }
  &.reportTypeRow {
    flex-flow: column;
    height: 20rem;
    overflow: hidden;
    padding-bottom: 2rem;
  }
}

.reportedBySelect, .stateList, .priorityPicker {
  flex: 1;
  flex-flow: row;
  margin-left: 0.5rem;
}

.priorityPicker {
  margin-left: 0;
  @media (min-width: $md-layout-width-min) {
    margin-left: 0.5rem;
  }
}

.priorityPicker li {
  font-size: 0.65rem;
  white-space: nowrap;
  width: 25%;
  button {
    width: 100%;
  }
  @media (min-width: $md-layout-width-min) {
    font-size: 1rem;
    white-space: initial;
  }
}