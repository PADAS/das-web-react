@import '../common/styles/vars/colors';
@import '../common/styles/buttons';
@import '../common/styles/vars/colors';

$unfiltered-color : $secondary-light-gray;
$filtered-color : $highlight-color;

* { box-sizing: border-box; };

.wrapper {
    position: relative;
    [class*=bs-popover] {
      max-width: unset;
    }
}

.popover {
  display: flex;
  flex-wrap: wrap;
  line-height: normal;
  position: relative;
  max-width: 20rem;
  width: 100vw;
  padding: 0.5rem;
}

.loading_indicator, .zero_results {
  font-weight: bold;
}

.button {
  @include mapboxControlButton;
  svg path {
    fill: #333;
  }
}

.search {
  --transition-timing: 0.15s;
  align-items: center;
  display: flex;
  position: relative;
  width: 100%;
  input {
    border-radius: 0.25rem;
    flex-grow: 1;
    padding: 0.25rem;
    padding-left: 1.75rem;
    font-size: 0.875rem;
    border-bottom: 1px solid $unfiltered-color;
    
    &::placeholder {
      color: $unfiltered-color;
    }
  }
  .searchIcon {
    --dimensions: 1.1rem;
    height: var(--dimensions);
    margin-right: -1rem;
    position: relative;
    top: -0.1rem;
    width: var(--dimensions);
    circle {
      fill: none;
      stroke: $unfiltered-color;
      stroke-width: 1rem;
    }
    path {
      fill: $unfiltered-color;
    }
    * {
      transition: var(--transition-timing) linear stroke, fill;
    }
  }
  .clearButton {
    width: 1rem;
    height: 1rem;
    padding: 0;
    position: absolute;
    outline: none;
    border: none;
    background: none;
    visibility: hidden;
    right: 0;
    cursor: pointer;
    &:hover > svg * {
      stroke: $filtered-color;
    }
    > svg {
      height: 100%;
      position: relative;
      top: -0.25rem;
      width: 100%;
    }
  }
  &.isFiltered {
    input {
      border-bottom: 1px solid $filtered-color;
      transition: var(--transition-timing) linear border-bottom;
    }
    .searchIcon {
      circle {
        stroke: $filtered-color;
      }
      path {
        fill: $filtered-color;
      }
    }
    .clearButton {
      visibility: visible;
    }
  }
  &.isActive:not(.isFiltered), &:hover:not(.isFiltered) {
    input {
      border-bottom: 1px solid darken($unfiltered-color, 30%);
    }
    .searchIcon {
      circle {
        stroke: darken($unfiltered-color, 30%);
      }
      path {
        fill: darken($unfiltered-color, 30%);
      }
    }
  }
}

.searchButton {
  align-items: center;
  position: relative;
  circle {
    fill: none;
    stroke: #333;
    stroke-width: 0.8rem;
  }
  path {
    fill: #333;
  }
}

.wrapper {
  span[class*=value] { 
    display: none;
  }
  input {
    width: 100%;
  }
  .errorInput {
    border: 1px solid $error-border;
  }
  small {
    color: $light-font-color;
    font-style: italic;
  }
}

.errorMessage {
  margin: 0.5rem 0 0;
  padding: 0.25rem;
}
