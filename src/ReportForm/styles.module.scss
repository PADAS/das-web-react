@import '../common/styles/buttons';
@import '../common/styles/vars/colors';
@import '../common/styles/inputs';
@import '../common/styles/layout';
@import '../common//styles/animations';

// $no-priority, $low-priority, $medium-priority, $high-priority;

.wrapper {
  position: relative;
}

.loadingOverlay {
  z-index: 5;
}


.form {
  background: white;
  font-size: 0.85rem;
  max-height: calc(80vh - 4rem);
  min-height: 16rem;
  overflow-y: auto;
  padding-bottom: 5rem;
  @media #{$whenPageIsAtMediumHeightAndWidth} {
    font-size: 1rem;
    max-height: calc(80vh - 10rem);
  }
  legend {
    display: none;
  }
  label {
    font-weight: bold;
    margin-bottom: 0;
  }
  [class$='checkbox '] {
    align-items: center;
    display: flex;
    margin-bottom: 0;
    + [class$='checkbox '] {
      margin-top: 0.5rem;
    }
  }
  [type=checkbox] {
    margin-right: 0.5rem;
    + span {
      cursor: pointer;
      font-weight: normal;
    }
  }
}

.reportControls, .formButtons {
  align-items: center;
  display: flex;
}

.saveErrorAlert {
  @include fade-in;
  border-radius: 0;
  bottom: -1rem;
  box-shadow: 0 0 .25rem rgb(38, 38, 38);
  min-height: 10rem;
  position: absolute;
  width: 100%;
  z-index: 5;
  h6 {
    margin-bottom: 1rem;
  }
  ul {
    margin: 0;
  }
}

.reportControls {
  background: lighten($light-gray-background, 5%);
  box-shadow: 0 0 2px rgba(0, 0, 0, 0.65);
  flex-wrap: wrap;
  padding: 0 0 0.25rem !important;
  position: relative;
  z-index: 4;
  @media #{$whenPageIsAtMediumHeightAndWidth} {
    padding: 0.5rem !important;
  }
  > label {
    align-items: center;
    display: flex;
    font-weight: bold;
    font-size: 0.8rem;
    margin-bottom: 0;
    padding: 0.25rem 0.5rem;
    position: relative;
    width: 50%;
    @media #{$whenPageIsAtMediumHeightAndWidth} {
      flex-wrap: wrap;
      font-size: 0.9rem;
      padding: 0.5rem;
    }
    > * {
      font-weight: initial;
    }
    > span {
      display: none;
      @media #{$whenPageIsAtMediumHeightAndWidth} {
        display: initial;
      }
      + * {
        width: 100%;
        @media #{$whenPageIsAtMediumHeightAndWidth} {
          margin-top: 0.25rem;
        }
      }
    }
  }

  .locationButtons {
    display: flex;
    flex-flow: column;
    margin-top: 0.25rem;
    button {
      @include linkButton;
      align-items: center;
      display: flex;
      font-size: 0.75rem;
      font-style: italic;
      margin-top: 0.5rem;
      opacity: 0.7;
      text-align: left;
      &:hover {
        opacity: 1;
      }
      @media #{$whenPageIsAtMediumHeightAndWidth} {
        margin-top: 0;
      }
      svg {
        margin-right: 0.25rem;
      }
    }
    @media #{$whenPageIsAtMediumHeightAndWidth} {
      flex-flow: row;
      justify-content: space-between;
    }
  }

  .geoLocator {
    [class*=alert-danger] {
      bottom: -35%;
      left: 0;
      position: absolute;
      width: 100%;
    }
  }
  
  .icon {
    --dimensions: 1rem;
    margin-right: 0.5rem;
    @media #{$whenPageIsAtMediumHeightAndWidth} {
      --dimensions: 1.5rem;
    }
    height: var(--dimensions);
    width: var(--dimensions);
    g {
      stroke: $primary-font-color;
    }
    &.iconFill, &.iconFill * {
      fill: $primary-font-color; 
    }
  }
  [class*=react-datetime-picker__wrapper] {
    @include defaultTextInput;
    width: 100%;
  }
  
}

.formButtons {
  justify-content: space-between;
}

.bottomControls {
  background: $light-gray-background;
  box-shadow: 0 0 2px rgba(0, 0, 0, .65);
  bottom: 0;
  left: 0;
  position: absolute;
  width: 100%;
  z-index: 2;
}

.formButtons, .attachmentControls {
  padding: 1rem;
}

.formHeader {
  color: white;
  display: flex;
  justify-content: space-between;
  padding: 1rem;
  position: relative;
  
  h4 {
    align-items: center;
    display: flex;
    font-size: 1rem;
    width: 100%;
    > span, > form {
      margin-left: 0.5rem;
    }
    @media #{$whenPageIsAtMediumHeightAndWidth} {
      font-size: 1.5rem;
    }
  }
  .icon {
    --dimensions: 1.5rem;
    margin-right: 0.5rem;
    max-height: var(--dimensions);
    width: var(--dimensions);
    @media #{$whenPageIsAtMediumHeightAndWidth} {
      --dimensions: 2.5rem;
    }
  }
  
  &.highPriority {
    background-color: $high-priority;
  }
  &.mediumPriority {
    background-color: $medium-priority;
  }
  &.lowPriority {
    background-color: $low-priority;
  }
  &.noPriority {
    background-color: $no-priority;
  }
  button {
    font-family: 'Roboto', sans-serif;
    margin-left: auto;
  }
  input {
    background: rgba(255, 255, 255, 0.1);
    color: white;
    max-width: unset;
  }
  [class*=editable] {
    margin-right: 1rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  form {
    flex-wrap: wrap;
    button {
      flex: 1;
      margin-left: 0;
      @media #{$whenPageIsAtMediumHeightAndWidth} {
        flex: initial;
        margin-left: auto;
      }
    }
    @media #{$whenPageIsAtMediumHeightAndWidth} {
      flex-wrap: nowrap;
    }
  }
}

.addToIncidentBtn {
  @include unstyledButton;
  align-items: center;
  border-radius: 0.5rem;
  color: $link-color;
  display: flex;
  font-weight: normal;
  justify-content: left;
  padding: 0.5rem 0;
  transition: background .2s linear;
  width: 100%;
  &:hover {
    background: darken(white, 5%);
    text-decoration: underline;
    color: $link-color;
  }
  svg {
    margin-right: 0.5rem;
  }
}

.headerDetails {
  display: flex;
  flex-flow: column;
  text-align: right;
  margin-left: auto;
  small {
    font-size: 0.65rem;
    line-height: 0.75rem;
  }
}

.reportHistory {
  font-size: 0.65rem;
  line-height: 0.75rem;
  text-decoration: underline;
  text-decoration-style: dashed;
}

.headerPopover {
  max-width: none;
  min-width: 14rem;
  padding: 0;
  [class*=popover-header] {
    //@include popoverTitle;
    background: $title-bar-color;
    color: white;
    font-weight: bold;
  }
  [class*=popover-header]::before {
    border-bottom: 1px solid $title-bar-color;
  }
  > [class*=arrow]::after {
    border-bottom-color: $title-bar-color;
  }
  [class*=popover-body] {
    padding: 0;
    margin: 0.75rem 0.75rem;
    h6 {
      margin-bottom: 0.5rem;
    }
    hr {
      margin-top: 0.5rem;
      margin-bottom: 0.5rem;
    }
  }
}

.historyPopover {
  max-width: none;
  min-width: 14rem;
  padding: 0;
  [class*=popover-header] {
    //@include popoverTitle;
    background: $title-bar-color;
    color: white;
    font-weight: bold;
  }
  [class*=popover-body] {
    padding: 0;
    max-width: 25rem;
    max-height: 30rem;
    overflow-y: auto;
    overflow-x: hidden;
  }
}

.historyItem {
  display: flex;
  flex-flow: row;
  width: 100%;
  margin: 0.75rem 0.75rem;
  .historyDetails {
    width: 12rem;
    .historyMessage {
      font-size: 0.85rem;
      line-height: 1rem;
    }
    .historyUser {
      font-size: 0.65rem;
      font-style: italic;
    }
  }
  .historyDate {
    align-items: flex-end;
    margin-left: 0.4rem;
    margin-right: 0.1rem;
  }
}

.gpsPopover {
  top: 85%;
}

.locationAnchor {
  @include defaultTextInput;
  color: $primary-font-color;
}

.attachmentControls {
  $background-color: lighten($light-gray-background, 5%);
  background: $background-color;
  display: flex;
  justify-content: space-evenly;
  padding: 0;
  > button {
    align-items: center;
    background: $background-color;
    border: none;
    color: $primary-font-color;
    display: flex;
    font-size: 0;
    justify-content: center;
    line-height: normal;
    flex: 1;
    flex-flow: column;
    padding: 0.5rem 0.25rem;
    transition: all .1s linear;
    @media #{$whenPageIsAtMediumHeightAndWidth} {
      font-size: 0.75rem;
    }
    @media #{$whenPageIsTallAndMediumWidth} {
      font-size: 1rem;
    }
    &:hover {
      background: darken($background-color, 3%);
      color: darken($primary-font-color, 4%);
    }
    &:active {
      background: darken($background-color, 6%);
      color: darken($primary-font-color, 8%);
    }
    &.draggable {
      &.draggingOver {
        background-color: rgba($bright-green, 0.5);
        border: .1rem dashed $light-gray-border;
        cursor: copy;
      }
    }
    span, small {
      display: none;
      @media #{$whenPageIsAtMediumHeightAndWidth} {
        display: initial;
      }
    }
    svg {
      height: auto;
      width: 1.5rem;
      @media #{$whenPageIsAtMediumHeightAndWidth} {
        margin-bottom: 0.5rem;
      }
      @media #{$whenPageIsTallAndMediumWidth} {
        width: 2rem;
      }
    }
  }
  [class*=popover] {
    bottom: 50%;
    left: 3vw;
    top: auto;
    @media (min-width: $md-layout-width-min) {
      left: 5vw;
    }
    @media #{$whenPageIsIsTallAndWide} {
      bottom: auto;
      left: 20vw;
      top: -12rem;
    }
  }
}

.fileUpload {
  display: none;
}

.ellipseText {
  text-overflow: ellipsis;
}

[class$='-placeholder'] {
  @extend .ellipseText;
  white-space: nowrap;
}


.attachmentList {
  margin-left: -1rem;
  display: flex;
  flex-flow: column;
  margin-bottom: 0;
  width: calc(100% + 2rem);
  li {
    align-items: center;
    border-top: 1px solid $light-gray-border;
    border-bottom: 1px solid $light-gray-border;
    display: flex;
    padding: 0.5rem 1rem;
    div {
      flex: 1;
    }
    h6 {
      align-items: center;
      display: flex;
      justify-content: space-between;
      margin-bottom: 0.5rem;
    }
    time {
      color: $light-font-color;
      margin-left: 0.5rem;
      font-size: 0.8rem;
    }
    button {
      @include unstyledButton;
      padding: 0;
      &:hover {
        text-decoration: underline;
      }
    }
    .x {
      margin-left: auto;
    }
    + li {
      border-top: none;
    }
    svg {
      margin-right: 1rem;
      max-width: 1rem;
    }
  }
}

.incidentList {
  border-bottom: 0.1875rem solid $light-gray-border;
  border-top: 0.1875rem solid $light-gray-border;
  margin: -1rem -1rem 0;
  width: calc(100% + 2rem);
  [class*=listItem] {
    background: none;
  }
  [class*=listItem] > * {
    padding: 1.25rem 0.5rem;
  }
}

.incidentScrollList {
  height: 100%;
  max-height: 20rem;
  overflow-y: auto;
}


.saveButton {
  > :first-child {
    padding: 0.375rem 1rem;
  }
  [class*=dropdown-toggle-split] {
    background: darken($primary-button-color, 10%);
    padding: 0 0.5rem;
  }
}