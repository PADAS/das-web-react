@import '../common/styles/layout';
@import '../common/styles/vars/colors';

.sideBar {
  display: flex;
  height: 100%;
  position: absolute;
  top: 0;
  z-index: 12;
  opacity: 1;
  transition: opacity .3s ease-in-out;

  &[class*=hidden] {
    opacity: 0;
    pointer-events: none;
  }
}

;

.betaPreviewLabel {
  font-size: 1rem;
  opacity: 0.5;
}

.verticalNav {
  display: none;
  flex-direction: column;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.75);
  backdrop-filter: blur(12px);
  width: var(--vertical-nav-width);

  [class*=nav-item] {
    width: 100%;
    height: 5.5rem;

    a {
      position: relative;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      width: 100%;
      height: 100%;
      color: white;
      font-size: 0.75rem;
      opacity: 0.75;
      padding: 0;

      svg {
        margin-bottom: 0.5rem;
      }
    }
  }

  .navItem {
    width: 100%;
    height: 5.5rem;
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 0.75rem;
    opacity: 0.75;
    padding: 0;

    svg {
      fill: white;
      margin-bottom: 0.5rem;
      height: auto;
      width: 1.5rem;
    }
  }

  &[class*=open] {
    a[class*=active] {
      background: rgba(255, 255, 255, 0.1);
      opacity: 1;
    }
  }

  @media (min-width: $md-layout-width-min) {
    display: flex;
  }
}

.badge {
  position: absolute;
  top: 0.75rem;
  right: 0.5rem;
  height: 0.75rem;
  width: 0.75rem;
  font-size: 0.625rem;
}

.tabsContainer {

  height: 100%;
  overflow: hidden;
  left: 0;
  top: 0;
  width: 0;
  min-width: 0;
  transition: box-shadow 0s linear 0.3s;

  &:not([class*=open]) {
    transition: min-width 0s linear 0.4s;
  }

  &[class*=open] {
    box-shadow: 0 0 3px rgba(black, 0.7);
    width: var(--sidebar-width);
    min-width: var(--sidebar-width);

    @media (min-width: $md-layout-width-min) {
      width: auto;
    }
  }

  @media (width: $md-layout-width-min) {
    left: var(--vertical-nav-width);
  }
}

.tab {
  background: linear-gradient(180deg, #FFFFFF 0%, rgba(255, 255, 255, 0.65) 100%);
  backdrop-filter: blur(16px);
  width: auto;
  transform: translateX(calc(calc(var(--sidebar-width) + var(--vertical-nav-width)) * -1));
  transition: transform 0.4s ease-in-out;
  height: 100%;

  &[class*=open] {
    transform: translateX(0);

    .filterWrapper {
      margin-bottom: -0.75rem;
      padding-top: 0.812rem;
    }
  }

  @media (width: $md-layout-width-min) {
    transform: translateX(calc(calc(46rem + var(--vertical-nav-width)) * -1));
  }
}

.tabBody {
  min-height: calc(100% - 3rem) !important;
  height: calc(100% - 3rem);
  overflow: hidden;
  position: relative;
  min-width: var(--sidebar-width);
  transition: width 0.4s ease-in-out;

  &:hover,
  &:focus {
    border: none;
  }

  .mapLayers {
    background-color: white;
    height: 100%;
    overflow: hidden;
    overflow-y: auto;
    padding-bottom: 4rem;

    >.noItems {
      visibility: hidden;
      font-size: 0.75rem;
      font-weight: bold;
      text-align: center;
      padding: 1rem;
    }

    >.noItems:only-child {
      visibility: visible;
    }
  }
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 3rem;
  width: 100%;
  background-color: $secondary-medium-gray;
  color: white;
  font-size: 1.375rem;
  padding: 0 1rem;

  .backButton {
    min-width: 2rem
  }

  button {
    background: none;
    color: inherit;
    border: none;
    padding: 0;
    font: inherit;
    cursor: pointer;
    outline: inherit;
    display: block;
  }

  h3 {
    margin: 0;
  }

  [class*=hidden] {
    visibility: hidden;
  }
}

.addReport {
  svg {
    width: 2rem;
    height: 2rem;
    background-color: white;

    g {
      path {
        stroke: white;
        fill: white;
      }

      rect {
        fill: $secondary-medium-gray;
      }
    }
  }
}

.mapLayers {
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
  padding-bottom: 4rem;

  >.noItems {
    visibility: hidden;
    font-size: 0.75rem;
    font-weight: bold;
    text-align: center;
    padding: 1rem;
  }

  >.noItems:only-child {
    visibility: visible;
  }
}

.feedError {
  align-items: center;
  display: flex;
  flex-flow: column;
  height: 100%;
  justify-content: center;
  padding: 1rem;

  h6 {
    align-items: center;
    display: flex;
    margin: 0 0 1rem;
    min-height: 2.25rem;

    +div {
      font-size: 0.9rem;
      font-style: italic;
      margin: -1rem 0 1rem;
      padding: 0 1rem;
      width: 100%;
    }
  }

  svg {
    fill: white;
    margin-right: 0.25rem;
  }
}

.sidebarEventFeed {
  margin-top: 0.75rem;

  [class*=titleContainer] {
    max-width: 20.5rem;
  }
}

.mapLayerFooter {
  background-color: $map-layers-footer;
  height: 3rem;
  width: var(--sidebar-width);
  text-align: left;
  position: absolute;
  bottom: 0;
  z-index: 3;

  a {
    margin-left: 0.5rem;
  }
}

// List Styles

.list {
  display: block;
  width: 100%;
  margin-bottom: 0;
  cursor: pointer;

  li {
    align-items: flex-start;
    border-top: 1px solid $light-gray-border;

    &:first-child {
      border-top: none;
    }

    &:last-child {
      border-bottom: 1px solid $light-gray-border;
    }

    display: flex;
    position: relative;
    justify-content: space-between;

    h4,
    h5,
    h6 {
      margin: 0;
      font-weight: 600;
    }

    [class*=checkmark] {
      cursor: pointer;
      left: 1rem;
      position: absolute;
      z-index: 3;
      top: 1.15rem;
      margin-top: 0.25rem;
      margin-right: 0.62rem;
    }

    [class*=Collapsible__trigger],
    .itemTitle {
      display: block;
      padding-left: 3.5rem;
      padding-right: 1rem;
      word-break: break-word;
      margin-bottom: 0;
      margin-right: 0.62rem;
      width: 100%;
    }

    .itemTitle {
      align-items: flex-start;
      display: flex;
      flex-wrap: wrap;
      flex-grow: 1;
      margin-bottom: 0;

      .defaultProperty {
        margin: 0.2rem 0 0 0.5rem;
        font-size: 0.75rem;
      }

      img {
        margin-right: 0.5rem;
        max-height: 1.5rem;
        max-width: 1.5rem;
      }
    }

    [class*=Collapsible__trigger] {
      cursor: pointer;
      padding-bottom: 1rem;
      padding-top: 1rem;
      position: relative;
      z-index: 1;

      &:hover {
        text-decoration: underline;
      }

      &::after {
        content: '<';
        color: transparent;
        background-image: url(../common/images/icons/arrow.svg);
        background-size: 1rem 1rem;
        background-repeat: no-repeat;
        background-position: center;
        font-size: 1.5rem;
        position: absolute;
        right: 1rem;
        top: 20%;
        transform: inherit;
        transition: 0.15s transform linear;
      }

      &[class*=is-disabled] {
        &::after {
          color: $medium-light-gray;
        }
      }

      &[class*=is-open] {
        box-shadow: 0 2px 3px $medium-light-gray;
        min-height: 3.3125rem;

        &::after {
          transform: rotate(-90deg);
        }
      }
    }

    [class*=Collapsible__contentOuter] {
      width: 100%;
    }
  }

  .list {
    background: $light-gray-background;
    border-left: 0.5rem solid $light-gray-border;
  }

  .itemList {
    background: lighten($light-gray-background, 3.5%);
    width: 100%;

    &.compressed {
      li {
        padding: 0.5rem 0;
      }
    }

    li {
      padding: 1rem 0.65rem 1rem 0;

      >[class*=checkmark] {
        top: 1rem;
      }
    }
  }

  .reportDesc {
    background: lighten($light-gray-background, 3.5%);
    width: 100%;
  }
}

.controls {
  >div:not(:last-child) {
    height: 2.25rem;
    width: 2.25rem;
    margin-right: 0.5rem;
    border-radius: 0.25rem;
  }

  @media (min-width: $md-layout-width-min) {
    margin: 0;
  }
}

.toggleButton {
  margin: -0.5rem 0;
}

.trigger {
  display: flex;
  justify-content: space-between;
  padding-right: 2rem;
  align-items: center;
}

.featureTitle {
  @extend .trigger;

  align-items: center;
  padding-left: 3.5rem;
  width: 100%;
}

.analyzerTitle {
  @extend .featureTitle;
}