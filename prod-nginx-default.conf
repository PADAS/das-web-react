# Let this container upstream /static/ to API if nothing's found locally.
upstream app_server {
	server api:8000;
}
server {
	listen 80;
	listen [::]:80;
	root /usr/share/nginx/html;
	set $gcs "storage.googleapis.com";
	server_name  $hostname localhost;

	location ~ ^.*/static/((?:js|css|media)/.*(main|chunk).*)$ {
		resolver 8.8.8.8;
		proxy_pass https://$gcs/er-static/static/$1;

		proxy_set_header Host storage.googleapis.com;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
		proxy_intercept_errors on;

		add_header X-Powered-By: 'Cloud-Storage';

	}

	location /static {
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
			#
			# Tell client that this pre-flight info is valid for 20 days
			#
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		try_files $uri @api;
	}

	location ~ ^/(login|reports|events|patrols|layers|settings|eula)(?:/(.*))?$ {
		alias /usr/share/nginx/html;
		try_files /index.html =404;
	}

	location / {
		index index.html index.htm;
	}

	location @api {
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Host $http_host;
		proxy_set_header   X-Real-IP $http_x_forwarded_for;
		proxy_set_header   X-Forwarded-Host $server_name; 

		proxy_pass http://app_server;
	}
}

