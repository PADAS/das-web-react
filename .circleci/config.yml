version: 2.1
orbs:
  node: circleci/node@4.3.0
references:
  workspace_root: &workspace_root /root/project
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root
commands:
  configure_git_for_commit_and_push:
    steps:
      - run: 'git config user.email "circleci@vulcan.com"'
      - run: 'git config user.name "circleci"'
      - run: "git config push.default current"
      - add_ssh_keys:
          fingerprints:
            - "c9:1d:33:93:16:c9:28:1c:3c:f4:f0:85:e3:f0:f8:d7"
  activate_google_service_account:
    steps:
      - run: 'gcloud auth activate-service-account --key-file=<(echo "$ENCODED_GCR_KEY" | base64 --decode)'

  docker_login:
    steps:
      - run: 'echo "$ENCODED_GCR_KEY" | base64 --decode | docker login --username _json_key --password-stdin https://gcr.io'

  trigger_downstream_builds:
    parameters:
      target_project_slug:
        type: string
        default: "das"
    steps:
      - run: "ci-helpers/trigger-downstream.sh << parameters.target_project_slug >> ${CIRCLE_BRANCH}"

executors:
  gcloud:
    docker:
      - image: "google/cloud-sdk:269.0.0"
    resource_class: xlarge

jobs:
  production_build:
    executor: node/default
    resource_class: xlarge
    steps:
      - "setup_remote_docker"
      - "docker_login"
      - "checkout"
      - run: "ci-helpers/makeversion.py"
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run: 
          command: npm run test-ci
          environment:
            NODE_OPTIONS: --max_old_space_size=8192 
      - run:
          command: CI=false npm run build
          name: Build Production Artefact
          environment:
            NODE_OPTIONS: --max_old_space_size=8192
      - run: 'make build_and_push descriptive_gcr_path_stem="$CIRCLE_BRANCH" unique_gcr_tag="$CIRCLE_WORKFLOW_ID"'
      - persist_to_workspace:
          root: "./"
          paths:
            - "build"
  push_to_storage:
    docker:
      - image: google/cloud-sdk
    steps:
      - *attach_workspace
      - run: |
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run: |
          gsutil cp -r build/static gs://er-static/
  trigger_downstream:
    executor: "gcloud"
    steps:
      - checkout
      - trigger_downstream_builds:
        name: "Trigger downstream builds"
  execute_smoke_tests:
    docker:
      - image: gcr.io/padas-app/circleci/er-web-automation/feat/add-ci-handling:latest
        auth:
          username: _json_key # default username when using a JSON key file to authenticate
          password: $GCLOUD_SERVICE_KEY
    steps:
  #     #TODO rename the site so tests can be executed in each specific site
      - run: |
          cd /app
          export SITE_DOMAIN=$(echo "${CIRCLE_BRANCH}" | tr '[:upper:]' '[:lower:]')
          export URL="https://${SITE_DOMAIN}.pamdas.org/login"
          export URL_ADMIN="https://${SITE_DOMAIN}.pamdas.org/admin/login"
          env > .env
          TEST_RESULT=0
          npm run test:cloud || { TEST_RESULT=1 }
          npm run reporter:cloud
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          gsutil cp -r ./allure-raw gs://er-report-test/
          if [[ ${TEST_RESULT} == 1 ]]; then; echo "Tests failed"; exit 1; fi


workflows:
  version: 2
  docker_build_workflow:
    jobs:
      - execute_smoke_tests
      - production_build:
          requires:
            - execute_smoke_tests
      - push_to_storage:
          requires:
            - production_build
      - trigger_downstream:
          context: padas-context
          requires:
            - production_build
