name: Frontend build
on: [push]
# on:
#   push:
#     branches:
#       - "develop"
jobs:
  build:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install dependencies
        run: yarn --ignore-scripts

      - name: Run tests
        run: yarn test-ci

      - name: Rebuild Node SASS
        run: npm rebuild node-sass

      - name: Yarn build
        run: CI=false yarn build

      - name: Build docker image
        run: |-
          gcloud auth configure-docker
          make build_and_push descriptive_gcr_path_stem="${GITHUB_REF#refs/heads/}" unique_gcr_tag="${GITHUB_SHA}"

      - name: Terraform config outputs & cluster
        run: |-
          cd terraform && terraform init
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan

      - name: Allowlist IP address
        run: |-
          gcloud compute firewall-rules create \"k8s-gha-${GITHUB_SHA:0:8}-${{ github.run_number }}\" --allow=\"tcp:443\" --description=\"for GitHub Actions... delete by: $(date --date='tomorrow')\" --direction=INGRESS --network=\"default\" --priority=899 --source-ranges=\"$(curl --silent ifconfig.me)/32\" --target-tags=\"k8s-proxy\" --project=\"earthranger-78ca55ca" --quiet

      - name: Configure cluster connectivity
        run: |-
          gcloud container clusters get-credentials das-dev --zone us-west1-a
          kubectl config set-cluster "$(kubectl config get-clusters | tail -n 1)" --server="https://$(cd terraform && terraform output -raw cluster_proxy_endpoint)" || false
          echo "$(cd terraform && terraform output -raw cluster_b64_encoded_proxy_ca_certificate)" | base64 -d > proxy.crt
          kubectl config set-cluster "$(kubectl config get-clusters | tail -n 1)" --certificate-authority="./proxy.crt" || false
          kubectl get pods -n stage

      - name: Remove ip address
        if: always()
        run: |-
          gcloud compute firewall-rules delete \"k8s-gha-${GITHUB_SHA:0:8}-${{ github.run_number }}\" --project=\"earthranger-78ca55ca" --quiet

      # TODO: Dar permiso para lanzar a kubernetes
      # TODO: Probar integraci√≥n
