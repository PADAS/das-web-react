name: Build the application

on:
  workflow_call:
    inputs:
      # Provide environment or workload_identity_provider and service account
      environment:
        type: string
      repository:
        required: true
        type: string
      tag:
        required: true
        type: string
      dockerfile:
        type: string
        default: docker/Dockerfile
      no-cache:
        type: boolean
        default: false
      artifact-download:
        type: boolean
        default: false
      artifact-name:
        type: string
      workload_identity_provider:
        type: string
      service_account:
        type: string

env:
  WORKLOAD_IDENTITY_PROVIDER: ${{ inputs.workload_identity_provider || vars.WORKLOAD_IDENTITY_PROVIDER }}
  SERVICE_ACCOUNT: ${{ inputs.service_account || vars.SERVICE_ACCOUNT }}

jobs:
  build:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      if: ${{ inputs.artifact-download }}
      with:
        name: ${{ inputs.artifact-name }}
    - name: GCP Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ env.SERVICE_ACCOUNT }}
    - name: Login to GAR
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.repository }}
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        context: .
        file: ${{ inputs.dockerfile }}
        tags: "${{ inputs.repository }}:${{ inputs.tag }}"
        no-cache: ${{ inputs.no-cache }}
        cache-from: type=gha
        cache-to: type=gha,mode=max