name: Run unit tests

on:
  workflow_call:
    inputs:
      command:
        required: true
        type: string
      playwright_image:
        required: true
        type: string
      das_image:
        required: true
        type: string
      das_web_image:
        required: true
        type: string

jobs:
  vars:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      token: ${{ steps.vars.outputs.token }}
    environment: padas-app
    steps:
      - name: GCP Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}
      - id: vars
        run: |
          echo "token=$(gcloud auth print-access-token)" >> $GITHUB_OUTPUT
  playwright:
    runs-on: ubuntu-latest
    needs: [vars]
    container: 
      image: ${{ inputs.playwright_image }}
      credentials:
        username: oauth2accesstoken
        password: ${{ needs.vars.outputs.token }}
    services:
      postgres:
        image: europe-west3-docker.pkg.dev/padas-app/er-mt/postgresql:20240417
        credentials:
          username: oauth2accesstoken
          password: ${{ needs.vars.outputs.token }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: fancypassword
          POSTGRES_DB: earthranger
      redis:
        image: redis:7.2
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      das:
        image: ${{ inputs.das_image }}
        credentials:
          username: oauth2accesstoken
          password: ${{ needs.vars.outputs.token }}
        options: >-
          --health-cmd "curl --fail -H 'Host: root.dev.pamdas.org' http://localhost:8000/api/v1.0/status || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          ALT_SERVER_NAMES: das
          DB_HOST: postgres
          DB_NAME: earthranger
          DB_USER: postgres
          DB_PASSWORD: fancypassword
          DB_PORT: 5432
          FQDN: root.dev.pamdas.org
          REDIS_HOST: redis
          MEMORY_STORE_HOST: redis-proxy.dev.pamdas.org
          MEMORY_STORE_API_KEY: ${{ secrets.MEMORY_STORE_API_KEY }}
      das_web:
        image: ${{ inputs.das_web_image}}
        credentials:
          username: oauth2accesstoken
          password: ${{ needs.vars.outputs.token }}
        options: >-
          --health-cmd "curl --fail http://localhost/ || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Run Tests
        run: | 
          cd /app
          ${{ inputs.command }}
        env:
          SITE_HOST: http://das_web
          API_URL: http://das:8000/api/v1.0
          USERNAME: ${{ secrets.PLAYWRIGHT_USERNAME }}
          PASSWORD: ${{ secrets.PLAYWRIGHT_PASSWORD }}
          CI: true
